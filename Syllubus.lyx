#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{caption,rotating}
\usepackage{amsmath}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family rmdefault
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Syllubus (Tentative)
\end_layout

\begin_layout Author
Instructor: Su, Danyang (ds293@duke.edu)
\begin_inset Newline newline
\end_inset

Office Hour: By Appointment
\end_layout

\begin_layout Section
Overview:
\end_layout

\begin_layout Standard
This summer course is designed to prepare first year graduate students for
 applying Matlab to economic research.
 By the end of the three-week long course, students are expected to gain
 adequate programming experience and comfort of solving complicated models
 in Matlab without being fret about it.
 
\end_layout

\begin_layout Section
Prerequisite: 
\end_layout

\begin_layout Standard
No prior knowledge about the Matlab is required.
 Although some knowledge of general programming is preferred.
 However, as with most courses in programming, I will not be able to cover
 all the gory details in the lectures, and the students should take initiatives
 in searching for solution for problems encountered.
 I do encourage student to obtain an account of Duke Slurm cluster service
 from IT soon after the course starts, and I will show how to use it towards
 the end of the course.
 
\end_layout

\begin_layout Standard
For Mac OS users, please install the Xcode software from Appstore.
 For Windows users, install new version of Visual Studio with SDK (preferred),
 or SDK 7.1 with .netframe 4.0.
\end_layout

\begin_layout Section
Grading: 
\end_layout

\begin_layout Standard
The grading will be based on 2 minor (20% each) and 1 major (60%) group
 assignments.
 Those assignments are simplified from real economic problems.
 For first two assignments, you are supposed to hand in the final result.
 You are supposed to hand in, as a group, three items: the pseudo-code,
 the (readily executable) code, and printout of the result.
 The final assignment is due by 11:59pm on the last day of the class.
 I will post my approach to the problem after each problem set is due.
 Students are encouraged to collaborate and cross-check each other's work,
 and I will not make any effort to eliminate free-riding.
 But remember, coding is about practice, and if you don't put in effort
 yourselves, you won't be able to do it right in a timely manner when needs
 arise.
 
\end_layout

\begin_layout Section
Class Schedule
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
I am indebted to previous instructors for this course, Joe Mazur, Tyler
 Ransom, and Olga Kozlova, for their generosity of sharing past course materials
, from which I drew many insightful contents.
\end_layout

\end_inset

:
\end_layout

\begin_layout Itemize
Class 1: Fundamental knowledge about coding in Matlab 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover the basic concept of Matlab, functions, scripts.
 
\end_layout

\begin_layout Itemize
Goal: Students are able to toy with Matlab and create simply functions and
 programs
\end_layout

\begin_layout Itemize
Assignment1: basic linear estimation using bootstraps
\end_layout

\end_deeper
\begin_layout Itemize
Class 2: I/O 
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover data input/output.
 
\end_layout

\begin_layout Itemize
Goal: Students are able to export result from Matlab programs.
\end_layout

\begin_layout Itemize
Assignment 2: Creating Tables as seen in economic papers.
\end_layout

\end_deeper
\begin_layout Itemize
Class 3: Graphics
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover commonly used type of graphs.
\end_layout

\begin_layout Itemize
Goal: Students are expected to be able to generate complicated graph with
 proper labels, and legends, etc..
\end_layout

\begin_layout Itemize
Assignment 1 due
\end_layout

\end_deeper
\begin_layout Itemize
Class 4: Debugging and code optimization.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover the common practice of debugging, and good practice to keep track
 of execution of code.
\end_layout

\begin_layout Itemize
Goal: Students are expected to improve efficiency in coding through effective
 debugging practice.
\end_layout

\end_deeper
\begin_layout Itemize
Class 5: Modeling Economy
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover Advanced coding methods in Matlab to cope with coding intensive economic
 models.
 
\end_layout

\begin_layout Itemize
Goal: Students are expected to be able to handle complicated economic model
\end_layout

\begin_layout Itemize
Assignment 3(a): Create a auction market.
\end_layout

\begin_layout Itemize
Assignment 2 due
\end_layout

\end_deeper
\begin_layout Itemize
Class 6: Modeling Economy (Q&A)
\end_layout

\begin_layout Itemize
Class 7: Non-linear Econometric Estimators:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover basic optimization tools in Matlab and apply them to solving economic
 problems
\end_layout

\begin_layout Itemize
Goal: Student are able to use build-in optimization toolkits with ease.
 
\end_layout

\begin_layout Itemize
Assignment 3(b): Applied the model derived in the previous assignment to
 obtain point estimate using GMM estimation.
 
\end_layout

\end_deeper
\begin_layout Itemize
Class 8: Time-consuming Optimization/Bootstrap Inference
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Cover Advanced optimization toolkits and bootstrapping techniques in Matlab
 
\end_layout

\begin_layout Itemize
Goal: Students are able to utilize university resources and advanced optimizatio
n toolboxes to solve time-consuming econometric models.
\end_layout

\begin_layout Itemize
Assignment 3(c): derive confidence interval to the point estimate derived
 earlier.
\end_layout

\end_deeper
\end_body
\end_document
