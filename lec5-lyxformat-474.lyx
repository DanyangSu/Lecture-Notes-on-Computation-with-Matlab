#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usepackage{caption,rotating}

\usetheme{Warsaw}
% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine natbib
\cite_engine_type authoryear
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file is a solution template for:
\end_layout

\begin_layout Itemize
Talk at a conference/colloquium.
 
\end_layout

\begin_layout Itemize
Talk length is about 20min.
 
\end_layout

\begin_layout Itemize
Style is ornate.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Copyright 2004 by Till Tantau <tantau@users.sourceforge.net>.
 
\end_layout

\begin_layout Plain Layout
In principle, this file can be redistributed and/or modified under the terms
 of the GNU Public License, version 2.
 However, this file is supposed to be a template to be modified for your
 own needs.
 For this reason, if you use this file as a template and not specifically
 distribute it as part of a another package/program, the author grants the
 extra permission to freely copy and modify this file as you see fit and
 even to delete this copyright notice.
 
\end_layout

\end_inset


\end_layout

\begin_layout Title
Lecture 5: Handling Complicated Problems
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Lec5
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, use only with long paper titles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Author
Su, Danyang
\end_layout

\begin_layout Date
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
July 2016
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, should be abbreviation of conference name
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
pgfdeclareimage[height=0.5cm]{institution-logo}{institution-logo-filename}
\end_layout

\begin_layout Plain Layout

%
\backslash
logo{
\backslash
pgfuseimage{institution-logo}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{%
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Simulate an Economy:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Learn how to formulate a complicated economy in Matlab
\end_layout

\begin_layout Itemize
Learn a bit more advanced programming techniques.
\end_layout

\begin_layout Itemize
Learning by doing
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Problem:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Assignment
\end_layout

\begin_layout Itemize
More coding involved
\end_layout

\begin_layout Itemize
Complicated 
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
How:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Conceptualization 
\end_layout

\begin_layout Itemize
Pseudo-code
\end_layout

\begin_layout Itemize
Break up the problem into functions
\end_layout

\begin_layout Itemize
Program
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Conceptualization:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Identify key components, key words: random match, incumbents, entrants,
\end_layout

\begin_layout Itemize
Procedure:
\end_layout

\begin_deeper
\begin_layout Itemize
let in new entrants and goods
\end_layout

\begin_layout Itemize
hold auctions
\end_layout

\begin_layout Itemize
exits
\end_layout

\begin_layout Itemize
clean up for next auction
\end_layout

\begin_layout Itemize
collect bid information for new bidding strategy
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Conceptualization:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Calculate optimal bid given valuation
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $b=V-V_{c}$
\end_inset

 (second price auction)
\end_layout

\begin_layout Itemize
\begin_inset Formula $V_{c}=(1-p)\cdot(1-\rho)QS$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $S=p\cdot(V-C)+(1-p)\cdot(1-\rho)QS$
\end_inset


\end_layout

\end_deeper
\begin_layout Itemize
Contraction mapping
\end_layout

\begin_layout Itemize
Avoid using nested optimizer
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Pseudo-code:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
More refined than the first step
\end_layout

\begin_layout Itemize
Ordering of the program
\end_layout

\begin_deeper
\begin_layout Itemize
for loop
\end_layout

\begin_layout Itemize
sequence of information update
\end_layout

\end_deeper
\begin_layout Itemize
Start to visualize functions
\end_layout

\begin_deeper
\begin_layout Itemize
Conceptual functions
\end_layout

\begin_layout Itemize
Utility functions
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functions:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Avoid redundancy 
\end_layout

\begin_layout Itemize
Make code easier to read
\end_layout

\begin_layout Itemize
Determine output and (to less degree) input
\end_layout

\begin_layout Itemize
Determine best way to realize functions
\end_layout

\begin_layout Itemize
Make adjustments to pseudo-codes (vectorization rather than for loop)
\end_layout

\begin_layout Itemize
Name of function (inputs/outputs) should be natural y
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Functions:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
[win_p, win_c] = get_bid_info(grid,parameters,bid,type, auction_history)
\end_layout

\begin_deeper
\begin_layout Itemize
process auction_history
\end_layout

\begin_layout Itemize
name and I/O should be informative
\end_layout

\begin_layout Itemize
find order statistics
\end_layout

\begin_layout Itemize
Interpolation or discretization?
\end_layout

\end_deeper
\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Program:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Go through multiple iterations
\end_layout

\begin_deeper
\begin_layout Itemize
Don't get bothered by bugs in the first iteration
\end_layout

\end_deeper
\begin_layout Itemize
Document/comments
\end_layout

\begin_layout Itemize
Code should be intuitive
\end_layout

\begin_layout Itemize
Avoid redundancy (e.g.
 initialize outside the loop)
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Some Useful Hotkeys:
\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Ctrl+R/T: comment/uncomment
\end_layout

\begin_layout Itemize
ctrl+]/[: indent/de-indent
\end_layout

\begin_layout Itemize
ctrl+c: force terminate running program
\end_layout

\end_deeper
\begin_layout Separator

\end_layout

\end_body
\end_document
